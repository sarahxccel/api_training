name: CI Workflow with Secrets

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest

    env:
      # Map GitHub secret DATABASE_PASSWORD to Terraform variable db_password
      TF_VAR_db_password: ${{ secrets.DATABASE_PASSWORD }}
      TF_VAR_location: europe-west4   # temporary hardcoded value

    steps:
      # 1️⃣ Checkout the repository so workflow can access your code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Authenticate with Google Cloud using your GitHub secret
      - name: Set up Google Cloud authentication
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      # Optional: configure Docker for GCP if you need to build/push images
      - name: Authenticate Docker with Artifact Registry
        run: gcloud auth print-access-token | docker login europe-west4-docker.pkg.dev --username oauth2accesstoken --password-stdin
        shell: bash

      - name: Build Docker for GCP
        run: docker build -t europe-west4-docker.pkg.dev/ae-terraform-2025/ae-2025-registry/sarahs-image:latest .
        shell: bash

      - name: Push Docker for GCP
        run: docker push europe-west4-docker.pkg.dev/ae-terraform-2025/ae-2025-registry/sarahs-image:latest
        shell: bash

      # 3️⃣ Terraform section
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Github Terraform Destroy
        run: terraform -chdir=terraform destroy -auto-approve

      - name: Terraform Plan
        env:
          TF_VAR_project: ae-terraform-2025
          TF_VAR_location: europe-west4   # temporary hardcoded value
          TF_VAR_database_name: mydatabase
          TF_VAR_database_user: dbuser
          TF_VAR_instance_connection_name: ae-terraform-2025:europe-west4:sarahs-db
          TF_VAR_deletion_protection: "false"
        run: terraform -chdir=terraform plan -out=tfplan

      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/main'
      #   run: terraform -chdir=terraform apply -auto-approve tfplan